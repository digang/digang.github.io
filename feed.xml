 <feed xmlns="http://www.w3.org/2005/Atom"> <id>https://digang.github.io/</id><title>DIGANG's BLOG</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2022-08-15T15:20:54+09:00</updated> <author> <name>digang(JeongYong)</name> <uri>https://digang.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://digang.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://digang.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 digang(JeongYong) </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>[리눅스] Linux 작업 예약 스케줄러 (크론 cron)</title><link href="https://digang.github.io/posts/%EB%A6%AC%EB%88%85%EC%8A%A4-cron-%EC%9E%91%EC%97%85-%EC%98%88%EC%95%BD-%EB%AA%85%EB%A0%B9/" rel="alternate" type="text/html" title="[리눅스] Linux 작업 예약 스케줄러 (크론 cron) " /><published>2022-08-14T00:00:00+09:00</published> <updated>2022-08-14T00:00:00+09:00</updated> <id>https://digang.github.io/posts/%EB%A6%AC%EB%88%85%EC%8A%A4-cron-%EC%9E%91%EC%97%85-%EC%98%88%EC%95%BD-%EB%AA%85%EB%A0%B9/</id> <content src="https://digang.github.io/posts/%EB%A6%AC%EB%88%85%EC%8A%A4-cron-%EC%9E%91%EC%97%85-%EC%98%88%EC%95%BD-%EB%AA%85%EB%A0%B9/" /> <author> <name>digang(JeongYong)</name> </author> <category term="리눅스" /> <category term="명령어" /> <summary> Cron 이란? 특정한 시간에 또는 특정 시간 마다 어떤 작업을 자동으로 수행하게 해주고 싶을 때 사용하는 명령어가 cron이다. cron은 특정한 시간에 특정한 작업을 수항하게 해주는 스케줄링 역할을 한다. cron은 왜 사용할까? 만약 당신이 회사에서 매 새벽 5시에 백업을 해야 한다면, 하루 이틀 정도라면 퇴근하지 않고 기다릴 수 있겠지만, 매일 한다면,, 또 심지어는 야근수당까지 나오지 않는다면? 이런 경우 주기적으로 반복되는 일을 자동으로 실행할 수 있도록 시스템 작업을 예약해줘야 한다. Crontab 과 cron과 관련된 몇 가지 파일들 1. crontab cron작업을 설정하는 파일을 crontab파일이라 한다. cron 프로세스는 /etc/crontab 파일에 설정된 것을 ... </summary> </entry> <entry><title>[Python] - 코테 쓸만한 함수, 모듈 정리</title><link href="https://digang.github.io/posts/python-counter/" rel="alternate" type="text/html" title="[Python] - 코테 쓸만한 함수, 모듈 정리" /><published>2022-04-27T00:00:00+09:00</published> <updated>2022-04-27T00:00:00+09:00</updated> <id>https://digang.github.io/posts/python-counter/</id> <content src="https://digang.github.io/posts/python-counter/" /> <author> <name>digang(JeongYong)</name> </author> <category term="Python" /> <category term="파이썬" /> <category term="module" /> <category term="collections" /> <summary> 목록 Counter combinations permutations upper isalpha 1. Counter Counter 는 Collections 모듈에 들어있는 클래스로써 다음과 같이 선언할 수 있다. from collections import Counter 이때, Counter(대문자)임에 유의하도록 하자. 다음은 Counter 의 함수들에 대해 알아보도록 하자. elements() import collections ex_counter = collections.Counter("I want success") print(list(ex_counter.elements())) print(sorted(ex_counter.elements())) # 정렬... </summary> </entry> <entry><title>[백준 21608] 상어 초등학교 - python</title><link href="https://digang.github.io/posts/%EB%B0%B1%EC%A4%80-%EC%83%81%EC%96%B4%EC%B4%88/" rel="alternate" type="text/html" title="[백준 21608] 상어 초등학교 - python" /><published>2022-03-09T00:00:00+09:00</published> <updated>2022-03-09T00:00:00+09:00</updated> <id>https://digang.github.io/posts/%EB%B0%B1%EC%A4%80-%EC%83%81%EC%96%B4%EC%B4%88/</id> <content src="https://digang.github.io/posts/%EB%B0%B1%EC%A4%80-%EC%83%81%EC%96%B4%EC%B4%88/" /> <author> <name>digang(JeongYong)</name> </author> <category term="백준" /> <category term="알고리즘" /> <summary> Preview 전형적인 시뮬레이션 문제이다. 때문에 문제에 제시된 조건들을 잘 따져가며 코딩하면 어렵지 않게 해결할 수 있다. 문제 링크 알고리즘 비어있는 칸 중에서 좋아하는 학생이 인접한 칸에 가장 많은 칸으로 자리를 정한다. 1을 만족하는 칸이 여러 개이면, 인접한 칸 중에서 비어있는 칸이 가장 많은 칸으로 자리를 정한다. 2를 만족하는 칸도 여러 개인 경우에는 행의 번호가 가장 작은 칸으로, 그러한 칸도 여러 개이면 열의 번호가 가장 작은 칸으로 자리를 정한다. 문제에서 제시한대로 만족도 &amp;gt; 빈칸 &amp;gt; 행 &amp;gt; 렬 순의 우선순위로 좌석을 찾아야 한다. 때문에 나의 코드는 다음과 같이 동작한다. 학생의 정보를 담은 리스트에서 한명씩 뽑아, 해당하는 학... </summary> </entry> <entry><title>[OPIc] IH 등급 시험 후기</title><link href="https://digang.github.io/posts/OPIc-%ED%9B%84%EA%B8%B0/" rel="alternate" type="text/html" title="[OPIc] IH 등급 시험 후기" /><published>2022-03-09T00:00:00+09:00</published> <updated>2022-03-09T00:00:00+09:00</updated> <id>https://digang.github.io/posts/OPIc-%ED%9B%84%EA%B8%B0/</id> <content src="https://digang.github.io/posts/OPIc-%ED%9B%84%EA%B8%B0/" /> <author> <name>digang(JeongYong)</name> </author> <category term="English" /> <category term="OPIc" /> <summary> Preview 결론부터 말하자면, 첫 시험인데도 불구하고 IH를 받았다. 정말로 기분이 아주 좋지 않을 수 없다. 참고로 본인은 평소 영어 공부에 그리 큰 관심이 있던 사람도 아니고 미국 드라마를 즐겨보는 편도 아니다. (시리즈를 통틀어 본 드라마는 딱 하나다 바로 ‘Friends’ 프렌즈는 제법 감명깊고 실제 영어 악센트나 발음에 정말 아주 0.01g정도 귀기울였다.) 영어 공부하려 본거는 진짜 아니다. 정말 진심으로 드라마가 재밌어서 봤고 사실 영어는 중간중간 재밌는 표현있을때만 신경썼을뿐. 그럼에도 불구하고 운이좋게 IH등급이 나와버렸다. 아무래도 준비시간이 그렇게 중요한 시험이 아닌듯하다. (회화 위주이니) 어찌되었든 내 경험이 조금이나마 다른사람들에게 도움이 될까 싶어 이 글을 ... </summary> </entry> <entry><title>[백준] 나무재테크</title><link href="https://digang.github.io/posts/%EB%B0%B1%EC%A4%80-%EB%82%98%EB%AC%B4%EC%9E%AC%ED%85%8C%ED%81%AC/" rel="alternate" type="text/html" title="[백준] 나무재테크" /><published>2022-02-15T00:00:00+09:00</published> <updated>2022-02-18T04:01:11+09:00</updated> <id>https://digang.github.io/posts/%EB%B0%B1%EC%A4%80-%EB%82%98%EB%AC%B4%EC%9E%AC%ED%85%8C%ED%81%AC/</id> <content src="https://digang.github.io/posts/%EB%B0%B1%EC%A4%80-%EB%82%98%EB%AC%B4%EC%9E%AC%ED%85%8C%ED%81%AC/" /> <author> <name>digang(JeongYong)</name> </author> <category term="백준" /> <category term="시뮬레이션" /> <summary> 문제 https://https://www.acmicpc.net/problem/16235 알고리즘 본 문제는 시뮬레이션 문제로 나와있는 과정을 따라가면 그리 어렵지 않은 문제이다. 하지만 중요한 구현상에 있어서 나무를 배열 하나에 저장할 시 시간 초과 문제를 해결할 수 없다. 따라서 다음과 같이 배열을 세개 만들어야 한다. real_board : 매해 겨울에 추가되는 양분의 수를 담아둔배열 , board : 실제 땅에 있는 양분을 담아둔 배열 tree_board : 해당하는 땅에 들어있는 나무의 나이를 담아둔 배열 구현 방식은 다음과 같다. tree_board 에 나무의 나이를 list 로써 저장한다. 봄 -&amp;gt; 여름 -&amp;gt; 가을 -&amp;gt; 겨울 순으로 코드를 구현... </summary> </entry> </feed>
